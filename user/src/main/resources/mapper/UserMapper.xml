<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gqb.user.dao.UserDao">

    <!--cloum是数据库建表的字段名 ,property是java实体类的属性名-->
    <resultMap id="BaseResultMap" type="com.gqb.user.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <id column="username" property="username" jdbcType="VARCHAR"/>
        <id column="password" property="password" jdbcType="VARCHAR"/>
        <id column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <id column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <id column="header" property="header" jdbcType="VARCHAR"/>
        <id column="status" property="status" jdbcType="TINYINT"/>
        <id column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>



    <select id="getAllUsers" resultMap="BaseResultMap">
        select id,username,nickname,mobile,header,status,create_time from `user`
    </select>

    <select id="getUserQuery" parameterType="com.gqb.user.entity.User" resultMap="BaseResultMap">
        select id,username,nickname,mobile,header,status,create_time
        from `user`
        where id > 1
        <if test="id!=null">
            AND id= #{id}
        </if>
        <if test="username!=null">
            AND username like "%"#{username}"%"
        </if>
        <if test="nickname!=null">
            AND nickname like "%"#{nickname}"%"
        </if>
        <if test="mobile!=null">
            AND mobile = #{mobile}
        </if>
        <if test="status!=null">
            AND status = #{status}
        </if>
    </select>

    <select id="getUserById" resultMap="BaseResultMap">
        select * from `user` where id=#{id}
    </select>

    <!--useGeneratedKeys和keyProperty获取数据库自动生成的id，只对insert有效-->
    <insert id="createUser" parameterType="com.gqb.user.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into `user`(username,password,nickname,mobile,header,status)
            values(#{username},#{password},#{nickname},#{mobile},#{header},1);
    </insert>

    <delete id="deleteUserById" parameterType="Long">
        delete from `user` where id =#{id};
    </delete>

    <update id="updateUser" parameterType="com.gqb.user.entity.User">
        update `user`
        <set>
            <if test="nickname!=null">
                nickname=#{nickname},
            </if>
            <if test="header!=null">
                header=#{header},
            </if>
            <if test="status!=null">
                status=#{status},
            </if>
        </set>
        where id=#{id};
    </update>

    <update id="updateStatus" parameterType="com.gqb.user.entity.User">
        update `user` set status = #{status} where id = #{id}
    </update>

    <select id="getStatus" parameterType="Long" resultType="Byte">
        select status from `user` where id=#{id}
    </select>

    <select id="getUserByUsername" parameterType="String" resultMap="BaseResultMap">
        select * from `user` where username=#{username}
    </select>

    <select id="getUserByPhone" parameterType="String" resultMap="BaseResultMap">
        select * from `user` where mobile=#{phone}
    </select>

    <select id="getUserByLogin" parameterType="String" resultMap="BaseResultMap">
        select * from `user` where username=#{username} or mobile=#{username}
    </select>
</mapper>